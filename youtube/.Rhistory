#blackline = mean segregation score, redline = home segregation score
p2<-ggplot(data1, aes(segragation, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=data1, aes(xintercept=mean_segregation),color="black", linetype="dashed", size=1)+facet_grid(userId ~ .) +
geom_vline(data=data1, aes(xintercept=segragation_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of segregation scores that a person stays")+
labs(x="Degree of racial segregation by census block (HHI)",y="Density")+
theme_classic()
p2+theme(plot.title=element_text(hjust=0.5))
m<-lm(milieuData3$mean_segregation~milieuData3$segragation_gid)
summary(m)
stargazer(m)
library(stargazer)
stargazer(m)
milieuData3<-milieuData3 %>%
mutate(non_white_percent=(race_v1-race_v2)/race_v1,
non_white_pct_gid=(total_gid-white_gid)/total_gid)
data1<-milieuData3[milieuData3$userId %in% sample_id, ]
p3<-ggplot(data1, aes(non_white_percent, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=data1, aes(xintercept=non_white_pct_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
#something is weird....
load("C:/Users/wooki/Desktop/milieu/data/milieuSurvey.RData")
milieuData4<-merge(milieuData3,parseDataWide,by='userId')
milieuData4 <- milieuData4 %>%
mutate(democrat = as.numeric(pid3 == "Democrat"),
republican = as.numeric(pid3 == "Republican"))
# ideology
milieuData4 <- milieuData4 %>%
mutate(ideo5 = case_when(
ideology == "Very liberal" ~ 1,
ideology == "Somewhat liberal" ~ 2,
ideology == "Moderate" ~ 3,
ideology == "Somewhat conservative" ~ 4,
ideology == "Very conservative" ~ 5
))
unique(milieuData4$mean_segregation)
m2<-lm(milieuData4$ideo5~milieuData4$mean_segregation)
summary(m2)
m3<-lm(milieuData4$mean_segregation~milieuData4$ideo5)
summary(m3)
stargazer(m2)
stargazer(m3)
stargazer(m2)
stargazer(m3)
load("C:/Users/wooki/Desktop/milieu/data/milieuData.RData")
#percent by racial group; segregation score = hhi
library(dplyr)
milieuData2<-milieuData %>%
mutate(white_percent=race_v2/race_v1,
black_percent=race_v3/race_v1,
american_indian_percent=race_v4/race_v1,
asian_percent=race_v5/race_v1,
hawaiian_percent=race_v6/race_v1,
other_percent=race_v7/race_v1,
two_more_percent=race_v7/race_v1,
segragation = ((white_percent)^2+(black_percent)^2+(american_indian_percent)^2
+(asian_percent)^2+hawaiian_percent^2+other_percent^2+two_more_percent^2))
#sanity check
unique(milieuData$userId)
unique(milieuData2$userId)
#check
milieuData2$geoid_num
library(dplyr)
summ<-milieuData2 %>%
group_by(userId) %>%
summarise(count=n())
aa<-subset(summ, summ$count>10)
milieuData2<-aa
#mean.segregation by each userId
milieuData2<-milieuData2 %>%
group_by(userId) %>%
mutate(mean_segregation=mean(segragation,na.rm=T))
#smaple 10 ids
sample_id<-sample(unique(milieuData2$userId),10)
data1<-milieuData2[milieuData2$userId %in% sample_id, ]
table(data1$userId)
library(ggplot2)
p1<-ggplot(data1, aes(segragation, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=data1, aes(xintercept=mean_segregation),color="black", linetype="dashed", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of segregation scores that a person stays")+
labs(x="Degree of racial segregation by census block (HHI)",y="Density")+
theme_classic()
p1+theme(plot.title=element_text(hjust=0.5))
load("C:/Users/wooki/Desktop/milieu/data/milieuData.RData")
#percent by racial group; segregation score = hhi
library(dplyr)
milieuData2<-milieuData %>%
mutate(white_percent=race_v2/race_v1,
black_percent=race_v3/race_v1,
american_indian_percent=race_v4/race_v1,
asian_percent=race_v5/race_v1,
hawaiian_percent=race_v6/race_v1,
other_percent=race_v7/race_v1,
two_more_percent=race_v7/race_v1,
segragation = ((white_percent)^2+(black_percent)^2+(american_indian_percent)^2
+(asian_percent)^2+hawaiian_percent^2+other_percent^2+two_more_percent^2))
#sanity check
unique(milieuData$userId)
unique(milieuData2$userId)
#check
milieuData2$geoid_num
library(dplyr)
summ<-milieuData2 %>%
group_by(userId) %>%
summarise(count=n())
aa<-subset(summ, summ$count>10)
milieuData4<-merge(summ,milieuData2, by= "userId")
milieuData_over10<-subset(milieuData4, milieuData4$count>10)
milieuData2<-subset(milieuData4, milieuData4$count>10)
milieuData2<-milieuData2 %>%
group_by(userId) %>%
mutate(mean_segregation=mean(segragation,na.rm=T))
#smaple 10 ids
sample_id<-sample(unique(milieuData2$userId),10)
data1<-milieuData2[milieuData2$userId %in% sample_id, ]
table(data1$userId)
library(ggplot2)
p1<-ggplot(data1, aes(segragation, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=data1, aes(xintercept=mean_segregation),color="black", linetype="dashed", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of segregation scores that a person stays")+
labs(x="Degree of racial segregation by census block (HHI)",y="Density")+
theme_classic()
p1+theme(plot.title=element_text(hjust=0.5))
#Steven's code to find home
library(tidyverse)
home <- milieuData %>%
mutate(fixed_geoid = str_replace_all(milieuData$GEOID_1, "15000US", "")) %>%
group_by(userId, fixed_geoid) %>%
summarize(count_of_geoids = n()) %>%
ungroup() %>% group_by(userId) %>%
slice(which.max(count_of_geoids)) %>%
rename(home = fixed_geoid) %>%
select(-count_of_geoids)
homes<-milieuData2[!duplicated(milieuData2$geoid_num),]
table(homes$userId)
aa<-subset(homes,homes$userId=="zPgVBNQrpe")
aa$geoid_num
#sanity check
milieuData2$geoid_num[1]-milieuData2$GEOID[1]
milieuData3<-merge(home,milieuData2, by= "userId")
unique(milieuData3$home)
milieuData3<-milieuData3 %>%
group_by(home) %>%
mutate(total_gid=sum(race_v1),
white_gid=sum(race_v2),
black_gid=sum(race_v3),
ameri_indi_gid=(race_v4),
aisan_gid=sum(race_v5),
hawaiian_gid=sum(race_v6),
other_gid=sum(race_v7),
two_gid=sum(race_v8))
milieuData3<-milieuData3 %>%
mutate(white_pct_gid=white_gid/total_gid,
black_pct_gid=black_gid/total_gid,
american_indian_pct_gid=ameri_indi_gid/total_gid,
asian_pct_gid=aisan_gid/total_gid,
hawaiian_pct_gid=hawaiian_gid/total_gid,
other_pct_gid=other_gid/total_gid,
two_more_pct_gid=two_gid/total_gid,
segragation_gid = ((white_pct_gid)^2+(black_pct_gid)^2+(american_indian_pct_gid)^2
+(asian_pct_gid)^2+hawaiian_pct_gid^2+other_pct_gid^2)+(two_more_pct_gid)^2)
#smaple 10 ids
data1<-milieuData3[milieuData3$userId %in% sample_id, ]
table(data1$userId)
#home racial segregation
#blackline = mean segregation score, redline = home segregation score
p2<-ggplot(data1, aes(segragation, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=data1, aes(xintercept=mean_segregation),color="black", linetype="dashed", size=1)+facet_grid(userId ~ .) +
geom_vline(data=data1, aes(xintercept=segragation_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of segregation scores that a person stays")+
labs(x="Degree of racial segregation by census block (HHI)",y="Density")+
theme_classic()
p2+theme(plot.title=element_text(hjust=0.5))
p2+theme(plot.title=element_text(hjust=0.5))
#Segregation score of home vs. segregation score of gps tracking
milieuData3$segragation_gid - milieuData3$mean_segregation
#Segregation score of home vs. segregation score of gps tracking
mean(milieuData3$segragation_gid - milieuData3$mean_segregation)
#Segregation score of home vs. segregation score of gps tracking
mean(milieuData3$segragation_gid - milieuData3$mean_segregation, na.rm = T)
home <-lm(milieuData3$mean_segregation~milieuData3$segragation_gid)
summary(home)
load("C:/Users/wooki/Desktop/milieu/data/milieuData.RData")
load("C:/Users/wooki/Desktop/milieu/data/contextualData.RData")
#percent by racial group; segregation score = hhi
library(dplyr)
milieuData2<-milieuData %>%
mutate(white_percent=race_v2/race_v1,
black_percent=race_v3/race_v1,
american_indian_percent=race_v4/race_v1,
asian_percent=race_v5/race_v1,
hawaiian_percent=race_v6/race_v1,
other_percent=race_v7/race_v1,
two_more_percent=race_v7/race_v1,
segragation = ((white_percent)^2+(black_percent)^2+(american_indian_percent)^2
+(asian_percent)^2+hawaiian_percent^2+other_percent^2+two_more_percent^2))
library(dplyr)
summ<-milieuData2 %>%
group_by(userId) %>%
summarise(count=n())
milieuData4<-merge(summ,milieuData2, by= "userId")
milieuData2<-subset(milieuData4, milieuData4$count>10)
#race and immigration / dynamic and static meaasure systematic difference.
#survey experiment / basketball court / make milieu survey / <-jason data
#experiment obama, furgerson /  white and non white respondents
#tables of regression , dynamic vs static
#hhi vs non white. racial resentment
#hhi vs
#mean.segregation by each userId
milieuData2<-milieuData2 %>%
group_by(userId) %>%
mutate(mean_segregation=mean(segragation,na.rm=T))
#smaple 10 ids
sample_id<-sample(unique(milieuData2$userId),10)
data1<-milieuData2[milieuData2$userId %in% sample_id, ]
table(data1$userId)
library(ggplot2)
#Steven's code to find home
library(tidyverse)
home <- milieuData %>%
mutate(fixed_geoid = str_replace_all(milieuData$GEOID_1, "15000US", "")) %>%
group_by(userId, fixed_geoid) %>%
summarize(count_of_geoids = n()) %>%
ungroup() %>% group_by(userId) %>%
slice(which.max(count_of_geoids)) %>%
rename(home = fixed_geoid) %>%
select(-count_of_geoids)
homes<-milieuData2[!duplicated(milieuData2$geoid_num),]
table(homes$userId)
aa<-subset(homes,homes$userId=="zPgVBNQrpe")
aa$geoid_num
#sanity check
milieuData2$geoid_num[1]-milieuData2$GEOID[1]
milieuData3<-merge(home,milieuData2, by= "userId")
unique(milieuData3$home)
milieuData3<-milieuData3 %>%
group_by(home) %>%
mutate(total_gid=sum(race_v1),
white_gid=sum(race_v2),
black_gid=sum(race_v3),
ameri_indi_gid=(race_v4),
aisan_gid=sum(race_v5),
hawaiian_gid=sum(race_v6),
other_gid=sum(race_v7),
two_gid=sum(race_v8))
milieuData3<-milieuData3 %>%
mutate(white_pct_gid=white_gid/total_gid,
black_pct_gid=black_gid/total_gid,
american_indian_pct_gid=ameri_indi_gid/total_gid,
asian_pct_gid=aisan_gid/total_gid,
hawaiian_pct_gid=hawaiian_gid/total_gid,
other_pct_gid=other_gid/total_gid,
two_more_pct_gid=two_gid/total_gid,
segragation_gid = ((white_pct_gid)^2+(black_pct_gid)^2+(american_indian_pct_gid)^2
+(asian_pct_gid)^2+hawaiian_pct_gid^2+other_pct_gid^2)+(two_more_pct_gid)^2)
#smaple 10 ids
data1<-milieuData3[milieuData3$userId %in% sample_id, ]
table(data1$userId)
#home racial segregation
#blackline = mean segregation score, redline = home segregation score
p2<-ggplot(data1, aes(segragation, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=data1, aes(xintercept=mean_segregation),color="black", linetype="dashed", size=1)+facet_grid(userId ~ .) +
geom_vline(data=data1, aes(xintercept=segragation_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of segregation scores that a person stays")+
labs(x="Degree of racial segregation by census block (HHI)",y="Density")+
theme_classic()
p2+theme(plot.title=element_text(hjust=0.5))
#systematic difference btw home hhi vs mean gps hhi
#Segregation score of home vs. segregation score of gps tracking
mean(milieuData3$segragation_gid - milieuData3$mean_segregation, na.rm = T)
milieuData3<-milieuData3 %>%
mutate(non_white_percent=(race_v1-race_v2)/race_v1,
non_white_pct_gid=(total_gid-white_gid)/total_gid)
data1<-milieuData3[milieuData3$userId %in% sample_id, ]
p3<-ggplot(data1, aes(non_white_percent, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=data1, aes(xintercept=non_white_pct_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
#something is weird....
load("C:/Users/wooki/Desktop/milieu/data/milieuSurvey.RData")
milieuData4<-merge(milieuData3,parseDataWide,by='userId')
milieuData4 <- milieuData4 %>%
mutate(democrat = as.numeric(pid3 == "Democrat"),
republican = as.numeric(pid3 == "Republican"))
# ideology
milieuData4 <- milieuData4 %>%
mutate(ideo5 = case_when(
ideology == "Very liberal" ~ 1,
ideology == "Somewhat liberal" ~ 2,
ideology == "Moderate" ~ 3,
ideology == "Somewhat conservative" ~ 4,
ideology == "Very conservative" ~ 5
))
milieuData4$race
table(milieuData4$race)
milieuData4$race
table(milieuData4$race)
#white
white<-subset(milieuData4,milieuData4$race=="White")
#white
white<-subset(milieuData4,milieuData4$race=="White")
sample_id2<-sample(unique(milieuData4$userId),10)
white_only<-milieuData4[milieuData4$userId %in% sample_id2, ]
p3<-ggplot(white_only, aes(white_pct_gid, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=white_only, aes(xintercept=segragation_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
white$home
homes
p3<-ggplot(white_only, aes(white_pct_gid, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=white_only, aes(xintercept=white_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
p3<-ggplot(white_only, aes(white_pct_gid, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=white_only, aes(xintercept=white_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
white$white_percent
p3<-ggplot(white_only, aes(white_percent, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=white_only, aes(xintercept=white_pct_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
white<-white %>%
mutate(white_percent=(race_v2)/race_v1,
white_pct_gid=(white_gid)/total_gid)
white_only<-milieuData4[milieuData4$userId %in% sample_id2, ]
white_only<-milieuData4[milieuData4$userId %in% sample_id2, ]
#white
white<-subset(milieuData4,milieuData4$race=="White")
white<-white %>%
mutate(white_percent=(race_v2)/race_v1,
white_pct_gid=(white_gid)/total_gid)
sample_id2<-sample(unique(milieuData4$userId),10)
white_only<-milieuData4[milieuData4$userId %in% sample_id2, ]
p3<-ggplot(white_only, aes(white_percent, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=white_only, aes(xintercept=white_pct_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
milieuData4$home
unique(milieuData4$home)
white[ !duplicated(white$home), ]
white_processed<-white[ !duplicated(white$home), ]
home_id<-unique(milieuData4$home)
white_processed<-white[white$home %in% home_id, ]
#white
white<-subset(milieuData4,milieuData4$race=="White")
white<-white %>%
mutate(white_percent=(race_v2)/race_v1,
white_pct_gid=(white_gid)/total_gid)
home_id<-unique(milieuData4$home)
white_processed<-white[white$home %in% home_id, ]
whitehomes<-milieuData4[milieuData4$userId %in% sample_id2, ]
home_id<-unique(milieuData4$home)
white_processed<-white[white$home %in% home_id, ]
table(milieuData4$race)
#white
white<-subset(milieuData4,milieuData4$race=="White")
white<-white %>%
mutate(white_percent=(race_v2)/race_v1,
white_pct_gid=(white_gid)/total_gid)
home_id<-unique(milieuData4$home)
white_processed<-white[white$home %in% home_id, ]
white_processed<-white[home_id %in% white$home, ]
'%!in%' <- function(x,y)!('%in%'(x,y))
white<-subset(milieuData4,milieuData4$race=="White")
white<-white %>%
mutate(white_percent=(race_v2)/race_v1,
white_pct_gid=(white_gid)/total_gid)
home_id<-unique(milieuData4$home)
'%!in%' <- function(x,y)!('%in%'(x,y))
white_homes<-white[home_id %in% white$home, ]
non_white_homes<-white[home_id %!in% white$home, ]
white_homes<-white[!duplicated(white$home),]
white_only<-rbind(white_homes,non_white_homes)
sample_id2<-sample(unique(milieuData4$userId),10)
white_only<-milieuData4[milieuData4$userId %in% sample_id2, ]
p3<-ggplot(white_only, aes(white_percent, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=white_only, aes(xintercept=white_pct_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
p3<-ggplot(white_only, aes(white_percent, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
# geom_vline(data=white_only, aes(xintercept=white_pct_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
white_only$white_pct_gid
sample_id2<-sample(unique(white_only$userId),10)
white_only<-white_only[white_only$userId %in% sample_id2, ]
p3<-ggplot(white_only, aes(white_percent, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=white_only, aes(xintercept=white_pct_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
sample_id2
white_only<-white_only[white_only$userId %in% sample_id2, ]
p3<-ggplot(white_only, aes(white_percent, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
#geom_vline(data=white_only, aes(xintercept=white_pct_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
#scale_y_continuous(limits = c(0, 10))
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
table(white_only$white_pct_gid)
table(white_only$white_percent)
min(white_only$white_percent)
min(white_only$white_percent,na.rm = T)
p3<-ggplot(white_only, aes(white_percent, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=white_only, aes(xintercept=white_pct_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
scale_y_continuous(limits = c(0, 50))+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
#white
white<-subset(milieuData4,milieuData4$race=="White")
white<-white %>%
mutate(white_percent=(race_v2)/race_v1,
white_pct_gid=(white_gid)/total_gid)
home_id<-unique(milieuData4$home)
'%!in%' <- function(x,y)!('%in%'(x,y))
non_white_homes<-white[home_id %!in% white$home, ]
white_homes<-white[!duplicated(white$home),]
white_only<-rbind(white_homes,non_white_homes)
sample_id2<-sample(unique(white_only$userId),10)
white_only<-white_only[white_only$userId %in% sample_id2, ]
p3<-ggplot(white_only, aes(white_percent, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=white_only, aes(xintercept=white_pct_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
scale_y_continuous(limits = c(0, 50))+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
p3<-ggplot(white_only, aes(white_percent, fill = userId)) + geom_density() +
facet_grid(userId ~ ., margins = TRUE, scales = "free")+
geom_vline(data=white_only, aes(xintercept=white_pct_gid),color="red", size=1)+facet_grid(userId ~ .) +
ggtitle("Distribution of non_white percent area that a person stays")+
labs(x="Degree of non_white percent by census block",y="Density")+
#scale_y_continuous(limits = c(0, 50))+
theme_classic()
p3+theme(plot.title=element_text(hjust=0.5))
setwd(C:/Users/wooki/Documents/GitHub/pythoncourse2018/youtube)
winners<-read.csv("results_winner.csv",header=T)
setwd(C:/Users/wooki/Documents/GitHub/pythoncourse2018/youtube)
winners<-read.csv("results_winner.csv",header=T)
winners<-read.csv("results_winner.csv",header=T)
setwd("C:/Users/wooki/Documents/GitHub/pythoncourse2018/youtube")
winners<-read.csv("results_winner.csv",header=T)
winners<-read.csv("results_winner.csv",header=T)
#smaple 10 ids
sample_id<-sample(unique(winners$keywords),10)
data1<-winners[winners$keywords %in% sample_id, ]
table(data1$userId)
data1
table(data1$keywords)
unique(data1$keywords)
sample_id
winners<-read.csv("results_winner.csv",header=T)
#smaple 10 ids
sample_id<-sample(unique(winners$keywords),10)
data1<-winners[winners$keywords %in% sample_id, ]
sample_id
sample<-winners[winners$keywords %in% sample_id, ]
write.csv("winner_sample.csv")
write.csv(sample,"winner_sample.csv")
setwd("C:/Users/wooki/Documents/GitHub/pythoncourse2018/youtube")
winners_sample<-read.csv("winner_sample.csv",header=T)
#select three for each id
winners_sample$Chosen <- 0
winners_sample[-tapply(-seq_along(winners_sample$keywords),winners_sample$keywords, sample, size=1),]$Chosen <- 1
winners_sample
winners_sample_select<-subset(winners_sample,winners_sample$Chosen==1)
write.csv(winners_sample_select,"winner_sample_sample.csv")
winners_sample<-read.csv("winner_sample.csv",header=T)
winners_sample_select<-subset(winners_sample,winners_sample$good=="x")
write.csv(winners_sample_select,"winner_sample_sample.csv")
